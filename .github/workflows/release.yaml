name: Release Tags

on:
  workflow_dispatch:

jobs:
  release:
    name: Release Github tags
    permissions:
      contents: write
      issues: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b

      - name: Install Node.js
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        run: |
          npx semantic-release
          SEMANTIC_RELEASE_EXIT_CODE=$?
          if [ $SEMANTIC_RELEASE_EXIT_CODE -eq 0 ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"

            RELEASE_VERSION=$(git tag --sort=-version:refname | head -n1)
            PACKAGE_VERSION=$(echo "$RELEASE_VERSION" | sed 's/^v//')

            jq '.version = $version' --arg version "$PACKAGE_VERSION" package.json > tmpfile && mv tmpfile package.json

            git add package.json

            # find ./.github -type f \( -name '*.yml' -a -name '*.yaml' \) -exec sed -i "s/^\(feat\|fix\|epic\|release\)[a-zA-Z0-9_-]*/$RELEASE_VERSION/g" {} +
            # if [[ $(git status --porcelain | grep "^ M .github/") ]]; then
            #   git add .github/
            # fi

            git commit -m "ci(workflow): updated branches and package.json after the release to latest release version"
            git push

          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
